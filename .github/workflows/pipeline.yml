name: Build and deploy

on:
  push:
    branches: [ 'main', 'staging', 'develop' ]
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     
      # Get branch's name.
      - name: Branch name
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
     
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
     
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
         java-version: '11'
         distribution: 'temurin'
         cache: maven
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      # Build project with Maven and analyze with SonarCloud.
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=2022s2-g1-ms \
          -Dsonar.projectKey=2022S2-G1-MS_shipping-service 
      
      # Build project with Maven.
      - name: Build project with Maven
        run: mvn clean package --file pom.xml
      
      # Build Docker image.      
      - name: Build image
        run: docker build --build-arg JAR_FILE=./target/*spring-boot.jar -t ${{ secrets.DOCKER_USER }}/${{ env.BRANCH }}-shipping-service:latest .
      
      # Test reports.
      - name: Install NodeJs
        uses: actions/setup-node@v1
        with: 
          node-version: "12.x"
        
      - name: Install Newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      
      - name: Create directory test result
        run: mkdir -p Reports
        
     # - name: Run Postman collection
      #  run: newman run obligatorio.postman_collection.json -r htmlextra --reporter-htmlextra-export Reports/report.html --reporter-htmlextra-darkTheme  > Reports/report2.html
      
     # - name: Reports details
     #   uses: actions/upload-artifact@v2
     #   with:
     #     name: ReportTest
     #     path: Reports
          
      # Docker Hub.
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USER }}/${{ env.BRANCH }}-shipping-service
